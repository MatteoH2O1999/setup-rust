name: CI/CD

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 24

jobs:
  # Run unit tests
  unit_tests:
    runs-on: ${{ matrix.os }}
    name: Unit tests on ${{ matrix.os }}
    if: always()
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          submodules: recursive
      - name: Setup NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test-ci
        env:
          FORCE_COLOR: 3
      - name: Upload coverage to Codecov
        if: ${{ github.event_name != 'release' }}
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  # Run linters on code
  lint:
    runs-on: ubuntu-latest
    name: Lint code
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          submodules: recursive
      - name: Setup NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm ci
      - name: Run prettier
        run: npm run format-check
      - name: Run eslint
        run: npm run lint

  # Test if build is successful
  build:
    runs-on: ubuntu-latest
    name: Test build
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          submodules: recursive
      - name: Setup NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm ci
      - name: Build Typescript
        run: npm run build
      - name: Package with NCC
        run: npm run package
      - name: Upload built action
        uses: actions/upload-artifact@v4
        with:
          name: built-action
          path: |
            dist/index.js
            .github/
            action.yml
          retention-days: 1
          if-no-files-found: error

  # Test action with different os
  test_action:
    needs: [build]
    runs-on: ${{ matrix.os }}
    name: Test setup-rust for ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Download built action
        uses: actions/download-artifact@v5
        with:
          name: built-action
      - name: Test action
        id: build
        uses: ./
        with:
          channel: stable
          profile: default
          components: clippy rustfmt
          subcommands: cargo-update
      - name: Check rustup version
        run: rustup -V
      - name: Check cargo version
        run: cargo -V

  check_test_action:
    needs: test_action
    if: always()
    runs-on: ubuntu-latest
    name: Check if action works for all labels
    steps:
      - name: Emit failure
        if: ${{ needs.test_action.result != 'success' }}
        run: exit 1
      - name: Emit success
        run: echo Action works on all labels...

  # CodeQL security scan
  codeql:
    runs-on: ubuntu-latest
    name: CodeQL Scan
    if: ${{ github.event_name != 'release' }}
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          submodules: recursive
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v4
        with:
          languages: javascript-typescript
          queries: security-and-quality
      - name: Autobuild
        uses: github/codeql-action/autobuild@v4
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v4

  # Update release tag
  release:
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    name: Build and release
    needs: [build, lint, unit_tests, check_test_action]
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          submodules: recursive
          ref: ${{ github.event.release.tag_name }}
      - name: Setup NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm ci
      - name: Build Typescript
        run: npm run build
      - name: Package with NCC
        run: npm run package
      - name: Force update tag
        uses: JasonEtco/build-and-tag-action@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
